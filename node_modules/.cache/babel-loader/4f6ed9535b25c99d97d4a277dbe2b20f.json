{"ast":null,"code":"var _jsxFileName = \"/Users/alstonpough/Desktop/Columbia Coding Bootcamp/Challenges/Challege 20 - React/dverse-portfolio/dverse-portfolio-react/src/components/Project/index.js\";\nimport React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction Project(props) {\n  // This imports the information for the current project sent down.\n  const currentProject = useState(props)[0].projects;\n  const name = currentProject.name;\n  const description = currentProject.description;\n  const image = currentProject.image;\n  const techs = currentProject.technologies;\n  const appLink = currentProject.deployed;\n  const gitLink = currentProject.github; // This function parses the information from the array and creates a list.\n\n  function getTechs(techArray) {\n    let techList = \"\";\n\n    for (var i = 0; i < techArray.length; i++) {\n      if (i === techArray.length - 1) {\n        techList += techArray[i];\n      } else {\n        techList += techArray[i] + \", \";\n      }\n    }\n\n    return techList;\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: \"18rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: require(`../../assets/images/${image}`),\n    className: \"card-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }, name), /*#__PURE__*/React.createElement(Card.Text, {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 6\n    }\n  }, description), /*#__PURE__*/React.createElement(Card.Subtitle, {\n    className: \"card-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }, \"Techs Used\"), /*#__PURE__*/React.createElement(Card.Text, {\n    className: \"card-techs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, getTechs(techs)), /*#__PURE__*/React.createElement(Card.Link, {\n    href: appLink,\n    target: \"_blank\",\n    className: \"card-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 6\n    }\n  }, name, \" App\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Card.Link, {\n    href: gitLink,\n    target: \"_blank\",\n    className: \"card-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }\n  }, name, \" Github\"))));\n}\n\nexport default Project;","map":{"version":3,"sources":["/Users/alstonpough/Desktop/Columbia Coding Bootcamp/Challenges/Challege 20 - React/dverse-portfolio/dverse-portfolio-react/src/components/Project/index.js"],"names":["React","useState","Card","Project","props","currentProject","projects","name","description","image","techs","technologies","appLink","deployed","gitLink","github","getTechs","techArray","techList","i","length","width","require"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction Project(props) {\n\t// This imports the information for the current project sent down.\n\tconst currentProject = useState(props)[0].projects;\n\n\tconst name = currentProject.name;\n\tconst description = currentProject.description;\n\tconst image = currentProject.image;\n\tconst techs = currentProject.technologies;\n\tconst appLink = currentProject.deployed;\n\tconst gitLink = currentProject.github;\n\n\t// This function parses the information from the array and creates a list.\n\tfunction getTechs(techArray) {\n\t\tlet techList = \"\";\n\n\t\tfor (var i = 0; i < techArray.length; i++) {\n\t\t\tif (i === techArray.length - 1) {\n\t\t\t\ttechList += techArray[i];\n\t\t\t} else {\n\t\t\t\ttechList += techArray[i] + \", \";\n\t\t\t}\n\t\t}\n\n\t\treturn techList;\n\t}\n\n\treturn (\n\t\t<Card style={{ width: \"18rem\" }}>\n\t\t\t<Card.Img\n\t\t\t\tvariant=\"top\"\n\t\t\t\tsrc={require(`../../assets/images/${image}`)}\n\t\t\t\tclassName=\"card-image\"\n\t\t\t/>\n\t\t\t<div className=\"center\">\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Card.Title className=\"card-title\">{name}</Card.Title>\n\t\t\t\t\t<Card.Text className=\"card-text\">{description}</Card.Text>\n\t\t\t\t\t<Card.Subtitle className=\"card-subtitle\">Techs Used</Card.Subtitle>\n\t\t\t\t\t<Card.Text className=\"card-techs\">{getTechs(techs)}</Card.Text>\n\t\t\t\t\t<Card.Link href={appLink} target=\"_blank\" className=\"card-link\">\n\t\t\t\t\t\t{name} App\n\t\t\t\t\t</Card.Link>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<Card.Link href={gitLink} target=\"_blank\" className=\"card-link\">\n\t\t\t\t\t\t{name} Github\n\t\t\t\t\t</Card.Link>\n\t\t\t\t</Card.Body>\n\t\t\t</div>\n\t\t</Card>\n\t);\n}\n\nexport default Project;\n"]},"metadata":{},"sourceType":"module"}